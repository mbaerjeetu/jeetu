def semanticVersion = "${env.BUILD_NUMBER}.0.0"
def packageName = "parallel_pipeline_demo_${env.BUILD_NUMBER}"
def version = "${env.BUILD_NUMBER}.0"
def artifactname = "parallel_pipeline_artifact.jar"
def repoName = "JenkinsDevOpsProject"
pipeline {
   agent any
   tools {
    	maven 'Maven'
    }
    environment {
		SCANNER_HOME = tool 'sonarScanner'
	}
	
    stages {
			stage('Build') {
				stages {
			    
				    stage("Build_artifact") {
					    steps {
						    echo"Build_artifact: build 1.1 executed"
							sh'mvn clean'
							sleep 10
			                snDevOpsArtifact(artifactsPayload: """{"artifacts": [{"name": 	"${artifactname}", "version": "1.${env.BUILD_NUMBER}","semanticVersion": "1.${env.BUILD_NUMBER}.0","repositoryName": "${repoName}"}],"branchName":"main"}""")
							sleep 5
					        //sonarSummaries()
					    } 
					}// end of build 1.1
					      
					stage("Build_Nested") {
					    steps {
					        echo"Build_Nested: build 1.2 executed"
						  	sh'mvn clean'
						  	sleep 10
	                  	  	snDevOpsPackage(name: "${packageName}-${env.BUILD_NUMBER}", artifactsPayload: """{"artifacts":[{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}", "repositoryName": "${repoName}"}], "branchName":"main"}""")
	                  		sleep 20
						  	snDevOpsChange()
					        //sonarSummaries()
					    } 
					}// end of build 1.1
				}// end of stages
			}// end of build1
		
			stage('Test') {
				parallel {
					stage('parallelTest1') {
						// Nested stage inside parallel
						stages {
							stage("parallelTest1 - nested_inside_parallel") {
								steps {
									echo'parallelTest1 - nested_inside_parallel'
									sh'mvn test -Dtest="TestJenkinsITTest01" -Dpublish'
									sleep 5
									//junit"**/target/surefire-reports/TestJenkinsITTest*.xml"
									sleep 15
								}
								post{
									success{
										echo'parallelTest1 - nested_inside_parallel: JenkinsITTests-success'
										junit"**/target/surefire-reports/*TestJenkinsITTest*.xml"
									}
								}
							}
                        stage("Deploy1"){
							steps {
								echo'Deploy1 - CR1'
								sleep 10
								snDevOpsChange()
							}
						}
					}// end of stages
				} // end of parallelTest1
			stage('parallelTest2') {
					stages {
						stage("parallelTest2 - nested_inside_parallel2:") {
							steps {
								sleep 20
								sh'mvn test -Dtest="TestJenkinsUnitTest01" -Dpublish'
								echo'parallelTest2 - nested_inside_parallel2: -  UnitTests in progress'
								sleep 5
								//junit"**/target/surefire-reports/*TestJenkinsUnitTest*.xml"
								sleep 15
								//snDevOpsChange()
				          		//sonarSummaries()
							}
							post{
								success{
									echo'parallelTest2: nested_inside_parallel2: UnitTests-success'
									junit"**/target/surefire-reports/*TestJenkinsUnitTest*.xml"
								}
							}
						}
						stage("Deploy2") {
							steps {
								echo'Deploy2 - CR2'
								sleep 15
								snDevOpsChange()
							}
						}
					}//end of stages			 
			}// end of parallelTest2
		}// end of parallel
	}// end of Test
} // end of stages
} // end of pipeline
